name: Test

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TEST_JOB_PARALLEL_COUNT: 2
  RAILS_ENV: test

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      actions: read
    strategy:
      fail-fast: false
      matrix:
        test_job_index: [0, 1]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Setup DB
        run: bundle exec rails "parallel:setup[`nproc`]"
      - name: Download all test results for default branch
        uses: dawidd6/action-download-artifact@v5
        with:
          name: test-result-*
          name_is_regexp: true
          path: ${{ runner.temp }}/default-branch-test-results
          branch: ${{ github.event.repository.default_branch }}
          workflow_conclusion: success
          if_no_artifact_found: warn
      - name: Split tests by timings
        uses: r7kamura/split-tests-by-timings@v0
        id: split-tests
        with:
          reports: ${{ runner.temp }}/default-branch-test-results/**/test_results
          glob: spec/**/*_spec.rb
          index: ${{ matrix.test_job_index }}
          total: ${{ env.TEST_JOB_PARALLEL_COUNT }}
      - name: Run rspec in parallel
        run: bundle exec parallel_rspec -n `nproc` ${{ steps.split-tests.outputs.paths }}
      - name: Upload test result
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-result-${{ matrix.test_job_index }}
          path: |
            test_results/
            coverage/.resultset*.json
          include-hidden-files: true
          if-no-files-found: ignore

  report-coverage:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write
    if: ${{ success() || failure() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: test-result-*
          path: ${{ runner.temp }}/test-results
      - name: Aggregate all coverage resultsets
        run: bundle exec rails runner "require 'simplecov'; SimpleCov.collate(Dir['${{ runner.temp }}/test-results/**/coverage/.resultset*.json'], 'rails')"
      - name: Report coverage by octocov
        uses: k1LoW/octocov-action@v1
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
